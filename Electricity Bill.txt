using System;
using System.Collections.ObjectModel;

namespace BillCalculator
{
    public class ElectricityBill
    {
        public int units;

        private int billAmount;

        private double totalAmount;
        public virtual int PriceBelowHundred { get; }

        public virtual int PriceAboveHundred { get; }

        public virtual int PriceFiveHundred { get; }

        public virtual double Tax { get; }


        protected int CalculateAmount()
        {
            if (units <= 100)
            {
                billAmount = units * PriceBelowHundred;
            }
            else if (units > 100 && units <= 200)
            {
                billAmount = (100 * PriceBelowHundred) + ((units - 100) * PriceAboveHundred);
            }

            else if (units > 200 && units <= 500)
            {
                billAmount = (100 * PriceBelowHundred) + (100 * PriceAboveHundred) + ((units - 200) * 23);

            }
            else
            {
                billAmount = (100 * PriceBelowHundred) + (100 * PriceAboveHundred) + (300 * 23) + ((units - 500) * PriceFiveHundred);
            }
            return billAmount;
        }


        public int TotalBill()
        {
            totalAmount = CalculateAmount() + CalculateAmount() * Tax;
            return Convert.ToInt32(Math.Round(totalAmount));
        }
    }

    public class Resedential : ElectricityBill
    {
        public override int PriceBelowHundred { get { return 5; } }

        public override int PriceAboveHundred { get { return 17; } }

        public override int PriceFiveHundred { get { return 69; } }

        public override double Tax { get { return 0.13; } }

        public Resedential(int units)
        {
            this.units = units;

        }
    }

    public class Commercial : ElectricityBill
    {
        public override int PriceBelowHundred { get { return 8; } }

        public override int PriceAboveHundred { get { return 21; } }

        public override int PriceFiveHundred { get { return 79; } }

        public override double Tax { get { return 0.17; } }

        public Commercial(int units)
        {
            this.units = units;

        }
    }


    class BillPrint
    {
        static public void Main()
        {
            do
            {
                Console.Write("Enter Your units:");
                int units = Convert.ToInt32(Console.ReadLine());
                Console.Write("You are Commercial/Resedential Consumer :");
                String meter = Console.ReadLine();
                if (meter == "Commercial" || meter == "commercial")
                {
                    ElectricityBill first = new Commercial(units);
                    Console.WriteLine("\nYour Total Electricity bill is " + first.TotalBill());
                    Console.Write("Press p to continue the program :");
                }
                else if (meter == "Resedential" || meter == "resedential")
                {
                    ElectricityBill first = new Resedential(units);
                    Console.WriteLine("\nYour Total  Electricity bill is " + first.TotalBill());
                    Console.Write("Press p to continue the program :");

                }
                else
                {
                    Console.WriteLine("Invalid Input");
                    Console.WriteLine("Select Commercial/Resedential");
                    Console.Write("Press p to continue the program :");
                }
            } while (Console.ReadLine() == "p");
        }

    }
}
